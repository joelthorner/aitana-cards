{"version":3,"file":"static/js/849.5005b73e.chunk.js","mappings":"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","sources":["components/cards-grid-static.tsx","utils/getUrlDomain.ts","components/links.tsx","routes/collection-detail.tsx"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport { Card as CardType } from \"../types/card\";\r\nimport Card from \"./card\";\r\n\r\ninterface CardsGridProps {\r\n  cards: CardType[];\r\n}\r\n\r\nexport default function CardsGridStatic({ cards }: CardsGridProps) {\r\n  const renderedItems = useMemo(\r\n    () =>\r\n      cards.map((card) => (\r\n        <div className=\"grid-item\" key={card.id}>\r\n          <Card card={card} />\r\n        </div>\r\n      )),\r\n    [cards]\r\n  );\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\"grid grid-default-cards gap-x-2 gap-y-4 xs:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7\">{renderedItems}</div>\r\n    </div>\r\n  );\r\n}\r\n","export function getUrlDomain(link: string): string {\r\n  const noProtocol = link.replace(/(^\\w+:|^)\\/\\//, '');\r\n\r\n  const domain = noProtocol.split('/')[0].replace('www.', '');\r\n\r\n  let result = domain;\r\n\r\n  const matchFile = link.match(/\\.([a-zA-Z0-9]+)$/);\r\n\r\n  const nofiles = ['html'];\r\n\r\n  const extension = matchFile && !nofiles.includes(matchFile[1]) ? ` (${matchFile[1]})` : '';\r\n\r\n  result = domain + extension;\r\n\r\n  return result;\r\n};","import { SquareArrowOutUpRight } from \"lucide-react\";\r\nimport { getUrlDomain } from \"../utils/getUrlDomain\";\r\nimport { useClassName } from \"../hooks/useClassName\";\r\n\r\nexport default function Links({ links, className }: { links?: string[]; className?: string }) {\r\n  const containerClassName = useClassName([className, \"flex flex-col mt-4\"]);\r\n\r\n  if (!links || links.length === 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div className={containerClassName}>\r\n      {links.map((link) => (\r\n        <a\r\n          key={link}\r\n          className=\"hover:bg-zinc-100 group hover:text-black flex items-center flex-wrap gap-x-2 gap-y-1 py-3 px-4 text-xs font-medium border border-gray-200 text-rose-600 -mt-px first:rounded-t-lg first:mt-0 last:rounded-b-lg transition-all whitespace-nowrap overflow-hidden\"\r\n          href={link}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <SquareArrowOutUpRight size={16} className=\"shrink-0\" />\r\n          {getUrlDomain(link)}\r\n          <span className=\"text-zinc-400 transition-all group-hover:text-zinc-500 font-normal whitespace-nowrap text-ellipsis overflow-hidden w-full\">{link}</span>\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import ReactMarkdown from \"react-markdown\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport ErrorPage from \"../error-page\";\r\nimport { collections } from \"../data/collections\";\r\nimport { cards } from \"../data/cards\";\r\nimport { getCardStatusIcon } from \"../utils/getCardStatusIcon\";\r\nimport PhotoSwipe from \"photoswipe\";\r\nimport { useRef } from \"react\";\r\nimport { MoveLeft, SquareArrowOutUpRight } from \"lucide-react\";\r\nimport { getUrlDomain } from \"../utils/getUrlDomain\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport Links from \"../components/links\";\r\nimport CardsGridStatic from \"../components/cards-grid-static\";\r\n\r\ninterface GalleryItem {\r\n  src: string;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport default function CollectionDetail() {\r\n  const navigate = useNavigate();\r\n\r\n  const { collectionId } = useParams<{ collectionId: string }>();\r\n\r\n  const [collection] = collections.filter((collection) => collection.id === collectionId);\r\n\r\n  const galleryRef = useRef<HTMLDivElement>(null);\r\n\r\n  const initPhotoSwipe = (event: React.MouseEvent<HTMLAnchorElement>, index: number) => {\r\n    event.preventDefault();\r\n\r\n    if (galleryRef.current) {\r\n      const imgTags = galleryRef.current.getElementsByTagName(\"img\");\r\n      const imagesData: GalleryItem[] = Array.from(imgTags).map((img) => ({\r\n        src: img.src,\r\n        width: img.naturalWidth,\r\n        height: img.naturalHeight,\r\n      }));\r\n\r\n      const pswp = new PhotoSwipe({ dataSource: imagesData, index: index });\r\n      pswp.init();\r\n    }\r\n  };\r\n\r\n  if (!collection) {\r\n    return <ErrorPage />;\r\n  }\r\n\r\n  const collectionCards = cards.filter((card) => card.collection.id === collection.id).reverse();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"lg:grid lg:grid-cols-2 lg:gap-4 lg:p-4 lg:items-start 2xl:container 2xl:mx-auto\">\r\n        <div className=\"fixed top-0 left-0 right-0 aspect-[768/530] z-10 md:relative lg:h-auto\" id={\"gallery-\" + collectionId} ref={galleryRef}>\r\n          <button className=\"absolute top-0 left-0 z-40 text-white py-4 px-4 drop-shadow-md\" onClick={() => navigate(-1)}>\r\n            <MoveLeft />\r\n          </button>\r\n          <a href={collection.image} target=\"_blank\" rel=\"noreferrer\" className=\"transition cursor-pointer\" onClick={(event) => initPhotoSwipe(event, 0)}>\r\n            <div className=\"relative\">\r\n              <img src={collection.image} alt={collection.name} className=\"size-full lg:rounded-3xl\" />\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div className=\"aspect-[768/530] md:hidden\"></div>\r\n\r\n        <div className=\"bg-white px-5 pt-6 pb-20 rounded-t-3xl -mt-5 flex flex-col gap-4 relative z-20 lg:mt-0 lg:rounded-3xl lg:py-[10%] lg:px-[8%] lg:h-full\">\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"flex flex-col gap-4 flex-1\">\r\n              <h1 className=\"text-xl font-medium leading-snug lg:text-2xl lg:leading-snug xl:text-3xl xl:leading-snug text-pretty\">{collection.name}</h1>\r\n            </div>\r\n            {collection.brand.image && <img className=\"hidden sm:flex h-7 shrink-0\" src={collection.brand.image} alt={collection.brand.name} />}\r\n          </div>\r\n\r\n          <div className=\"flex gap-2 flex-wrap items-center\">\r\n            <div className=\"hs-tooltip\">\r\n              <span className=\"hs-tooltip-toggle inline-flex items-center gap-x-1.5 py-1.5 px-3 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\r\n                {collectionCards.length} cards\r\n              </span>\r\n              <span\r\n                className=\"hs-tooltip-content font-normal text-xs hs-tooltip-shown:opacity-100 hs-tooltip-shown:visible opacity-0 transition-opacity inline-block absolute invisible z-10 py-1 px-2 bg-gray-900 text-white rounded-md\"\r\n                role=\"tooltip\"\r\n              >\r\n                Total cards found\r\n              </span>\r\n            </div>\r\n\r\n            {collection.serie && (\r\n              <div className=\"hs-tooltip\">\r\n                <span className=\"hs-tooltip-toggle inline-flex items-center gap-x-1.5 py-1.5 px-3 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\r\n                  {collection.serie}\r\n                </span>\r\n                <span\r\n                  className=\"hs-tooltip-content font-normal text-xs hs-tooltip-shown:opacity-100 hs-tooltip-shown:visible opacity-0 transition-opacity inline-block absolute invisible z-10 py-1 px-2 bg-gray-900 text-white rounded-md\"\r\n                  role=\"tooltip\"\r\n                >\r\n                  Collection serie\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {collection.description && collection.description.length > 0 && (\r\n            <ReactMarkdown className=\"markdown grid gap-2 text-zinc-500 mt-4 text-sm sm:text-base\" remarkPlugins={[remarkGfm]}>\r\n              {collection.description}\r\n            </ReactMarkdown>\r\n          )}\r\n\r\n          {collection.links.length > 0 && <Links links={collection.links} />}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-zinc-950 rounded-t-3xl px-4 pt-6 pb-20 relative z-20 flex flex-col gap-16 -mt-6 lg:mt-0\">\r\n        <div>\r\n          {collectionCards.length > 0 && (\r\n            <div>\r\n              <div className=\"mb-4 font-medium text-white text-center lg:text-lg xl:mb-6 xl:text-xl\">Collection cards</div>\r\n              <CardsGridStatic cards={collectionCards} />\r\n            </div>\r\n            // <div className=\"bg-zinc-900 border border-zinc-950 rounded-xl shadow-sm overflow-hidden\">\r\n            //   <table className=\"min-w-full divide-y divide-zinc-950 text-xs\">\r\n            //     <thead className=\"bg-zinc-900\">\r\n            //       <tr>\r\n            //         <th scope=\"col\" className=\"ps-3 py-2 text-start\">\r\n            //           <div className=\"flex items-center gap-x-2\">\r\n            //             <span className=\"text-xs font-semibold tracking-wide text-zinc-200\">#</span>\r\n            //           </div>\r\n            //         </th>\r\n\r\n            //         <th scope=\"col\" className=\"px-3 py-2 text-start\">\r\n            //           <div className=\"flex items-center gap-x-2\">\r\n            //             <span className=\"text-xs font-semibold tracking-wide text-zinc-200\">Image</span>\r\n            //           </div>\r\n            //         </th>\r\n\r\n            //         <th scope=\"col\" className=\"w-1/2 py-2 text-start\">\r\n            //           <div className=\"flex items-center gap-x-2\">\r\n            //             <span className=\"text-xs font-semibold tracking-wide text-zinc-200\">Name</span>\r\n            //           </div>\r\n            //         </th>\r\n\r\n            //         <th scope=\"col\" className=\"pe-3 py-2 text-start\">\r\n            //           <div className=\"flex items-center gap-x-2\">\r\n            //             <span className=\"text-xs font-semibold tracking-wide text-zinc-200\">Status</span>\r\n            //           </div>\r\n            //         </th>\r\n\r\n            //         <th scope=\"col\" className=\"px-3 py-2 text-start\">\r\n            //           <div className=\"flex items-center gap-x-2\">\r\n            //             <span className=\"text-xs font-semibold tracking-wide text-zinc-200\">Rarity</span>\r\n            //           </div>\r\n            //         </th>\r\n            //       </tr>\r\n            //     </thead>\r\n\r\n            //     <tbody className=\"divide-y divide-zinc-950 text-[10px] text-zinc-300\">\r\n            //       {collectionCards.map((collectionCard) => (\r\n            //         <tr key={collectionCard.id}>\r\n            //           <td className=\"size-px whitespace-nowrap p-0\">\r\n            //             <div className=\"ps-3 py-2\">\r\n            //               <code className=\"text-yellow-500\">{collectionCard.number}</code>\r\n            //             </div>\r\n            //           </td>\r\n            //           <td className=\"size-px whitespace-nowrap p-0\">\r\n            //             <div className=\"px-3 py-2\">\r\n            //               {collectionCard.images.length > 0 && (\r\n            //                 <Link to={\"/cards/\" + collectionCard.id}>\r\n            //                   <div className=\"aspect-[5/7] relative w-9\">\r\n            //                     <img className=\"absolute inset-0 object-cover rounded-lg\" src={collectionCard.images[0]} alt={collectionCard.name} />\r\n            //                   </div>\r\n            //                 </Link>\r\n            //               )}\r\n            //             </div>\r\n            //           </td>\r\n            //           <td className=\"size-px w-1/2 p-0\">\r\n            //             <div className=\"py-2\">\r\n            //               <Link to={\"/cards/\" + collectionCard.id}>{collectionCard.name}</Link>\r\n            //             </div>\r\n            //           </td>\r\n            //           <td className=\"size-px whitespace-nowrap p-0\">\r\n            //             <div className=\"pe-3 py-2 flex justify-center\">{getCardStatusIcon(collectionCard.status)}</div>\r\n            //           </td>\r\n            //           <td className=\"size-px whitespace-nowrap p-0\">\r\n            //             <div className=\"px-3 py-2 flex justify-center\">{collectionCard.rarity}/5</div>\r\n            //           </td>\r\n            //         </tr>\r\n            //       ))}\r\n            //     </tbody>\r\n            //   </table>\r\n            // </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["CardsGridStatic","_ref","cards","renderedItems","useMemo","map","card","_jsx","className","children","Card","id","getUrlDomain","link","domain","replace","split","result","matchFile","match","includes","Links","links","containerClassName","useClassName","length","_jsxs","href","target","rel","SquareArrowOutUpRight","size","_Fragment","CollectionDetail","navigate","useNavigate","collectionId","useParams","collection","collections","filter","galleryRef","useRef","ErrorPage","collectionCards","reverse","ref","onClick","MoveLeft","image","event","initPhotoSwipe","index","preventDefault","current","imgTags","getElementsByTagName","imagesData","Array","from","img","src","width","naturalWidth","height","naturalHeight","PhotoSwipe","dataSource","init","alt","name","brand","role","serie","description","ReactMarkdown","remarkPlugins","remarkGfm"],"sourceRoot":""}